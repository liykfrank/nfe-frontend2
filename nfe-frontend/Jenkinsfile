#!/usr/bin/env groovy

env.sourceBranch = env.gitlabSourceBranch ?: 'develop'
env.gitlabRepositoryUrl = env.gitlabSourceRepoHttpUrl ?: 'http://gitlab.nfedev.accelya.com/bsplink/nfe-frontend.git'

echo "[INFO] Source Branch: ${env.sourceBranch}"
echo "[INFO] Source Repository URL: ${env.gitlabRepositoryUrl}"

pipeline {

    agent none

    // tools {
    //     tool name: 'sonarscanner3.2.0', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
    // }

    stages {

        stage('Build') {

            agent {
                label 'master'
            }

            steps {
                checkout poll: false, scm: [
					$class: 'GitSCM',
					branches: [[name: "*/${env.sourceBranch}" ]],
					doGenerateSubmoduleConfigurations: false,
						extensions: [],
						submoduleCfg: [],
						userRemoteConfigs: [[
							credentialsId: env.gitlabCredentialsId,
							url: "${env.gitlabRepositoryUrl}"
					]]]

				nodejs('nodejs') {
				    sh 'npm install'
                    //sh 'npm run build'
                }

                dir('dist') {
                    stash name: 'nfe-frontend'
                }
            }
        }

         stage('Test') {

            agent {
                label 'master'
            }

            steps {

                nodejs('nodejs') {
                    sh 'npm run test'
                   // sh 'npm run e2e'
                }
			}
        }

        stage('Publish') {

            agent {
                label 'master'
            }

            steps {
            	// sh 'npm login --registry=http://nexusinterno.nfedev.accelya.com/repository/nfe-frontend/'
                sh 'npm publish --registry=http://nexusinterno.nfedev.accelya.com/repository/nfe-frontend/'
	        }
	  	}

        stage('SonarQube') {

            agent {
                label 'master'
            }

            steps {
                configFileProvider([configFile(fileId: 'sonar-project.properties', targetLocation: '.')]) {
                    script {
                        def scannerHome = tool 'sonarscanner3.2.0';
                        withSonarQubeEnv('a2lsonarq1') {
                            //    sh "sonar-scanner"
                            sh "${scannerHome}/bin/sonar-scanner"
                        }
                    }
                }
	        }
	  	}

        stage('Push to IATA repository') {

            agent {
                label 'master'
            }

            steps {
            	// this shell script is located in <JENKINS_HOME>/bin folder and the PATH is configured through jenkins
                sh 'push_to_iata.bash $WORKSPACE $JOB_BASE_NAME'
			}
        }

        stage('Deploy') {

            agent {
                label 'a2lyadesch1'
            }

            steps {
                dir('dist') {
                    unstash 'nfe-frontend'
                }
                sh './deploy-docker.sh'
			}
        }
  	}
}

