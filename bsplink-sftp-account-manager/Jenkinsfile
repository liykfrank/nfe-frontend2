#!/usr/bin/env groovy

env.sourceBranch = env.gitlabSourceBranch ?: 'master'
env.gitlabRepositoryUrl = env.gitlabSourceRepoHttpUrl ?: 'http://gitlab.nfedev.accelya.com/bsplink/bsplink-sftp-account-manager.git'

echo "[INFO] Source Branch: ${env.sourceBranch}"
echo "[INFO] Source Repository URL: ${env.gitlabRepositoryUrl}"

pipeline {

    agent any

	//configuration for returning the pipeline execution status to Gitlab
	options {
        gitLabConnection('A2LGIT1')
        gitlabCommitStatus(name: 'jenkins')
    }

    stages {
        stage('Build') {
            steps {
		    	checkout poll: false, scm: [
					$class: 'GitSCM',
					branches: [[name: "*/${env.sourceBranch}" ]],
					doGenerateSubmoduleConfigurations: false,
						extensions: [],
						submoduleCfg: [],
						userRemoteConfigs: [[
							credentialsId: env.gitlabCredentialsId,
							url: "${env.gitlabRepositoryUrl}"
					]]]

				configFileProvider([configFile(fileId: 'gradle.properties', targetLocation: '.')]) {
                	sh './gradlew clean build'
                }
            }
            
            //publish unit tests and unit test coverage reports
         	post {
                always {
                    junit '**/test-results/**/*.xml'
                    step([$class: 'JacocoPublisher'])
                }
            }
        }
        
    	stage('Publish')  {
			steps {
				sh './gradlew uploadArchives'
			}
		}
		
		stage('SonarQube') {
            steps {
            	withSonarQubeEnv('a2lsonarq1') {
                	sh './gradlew sonarqube'
             	}
            }
        }
        
		stage('Push to IATA repository') {
            steps {
            	// this shell script is located in <JENKINS_HOME>/bin folder and the PATH is configured through jenkins
                sh 'push_to_iata.bash $WORKSPACE $JOB_BASE_NAME'
			}
        }
  	}
}
